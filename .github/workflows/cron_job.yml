name: Get Top PT Stream Services

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0,8,12,17 * * *'  # 00:00, 08:00, 12:00, 17:00 todos os dias

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y jq

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Refresh Trakt Token
        id: refresh
        env:
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          response=$(curl -s --location 'https://api.trakt.tv/oauth/token' \
            --header 'Content-Type: application/json' \
            --data '{
                "refresh_token": "'"$REFRESH_TOKEN"'",
                "client_id": "'"$CLIENT_ID"'",
                "client_secret": "'"$CLIENT_SECRET"'",
                "redirect_uri": "urn:ietf:wg:oauth:2.0:oob",
                "grant_type": "refresh_token"
            }')

          access_token=$(echo "$response" | jq -r '.access_token')
          refresh_token=$(echo "$response" | jq -r '.refresh_token')

          echo "::add-mask::$access_token"
          echo "::add-mask::$refresh_token"

          # Save as output so the next step can access it
          echo "access_token=$access_token" >> $GITHUB_OUTPUT

          # Update GitHub secrets for future runs
          gh secret set ACCESS_TOKEN -b"$access_token"
          gh secret set REFRESH_TOKEN -b"$refresh_token"

      - name: Run Python Script
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          ACCESS_TOKEN: ${{ steps.refresh.outputs.access_token }}
          KIDS_LIST: ${{ vars.KIDS_LIST }}
          PRINT_LISTS: ${{ vars.PRINT_LISTS }}
        run: python top_pt_stream_services.py
